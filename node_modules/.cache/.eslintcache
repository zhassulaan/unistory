[{"/Users/zhassik/Desktop/unistory/src/index.tsx":"1","/Users/zhassik/Desktop/unistory/src/App.tsx":"2","/Users/zhassik/Desktop/unistory/src/pages/UserPage.tsx":"3","/Users/zhassik/Desktop/unistory/src/pages/HomePage.tsx":"4","/Users/zhassik/Desktop/unistory/src/components/Header.tsx":"5","/Users/zhassik/Desktop/unistory/src/components/Modal.tsx":"6","/Users/zhassik/Desktop/unistory/src/components/Hero.tsx":"7","/Users/zhassik/Desktop/unistory/src/components/Registration.tsx":"8","/Users/zhassik/Desktop/unistory/src/components/Button.tsx":"9"},{"size":273,"mtime":1672033357763,"results":"10","hashOfConfig":"11"},{"size":1592,"mtime":1672074298890,"results":"12","hashOfConfig":"11"},{"size":1342,"mtime":1672033357764,"results":"13","hashOfConfig":"11"},{"size":813,"mtime":1672070180213,"results":"14","hashOfConfig":"11"},{"size":1101,"mtime":1672033357762,"results":"15","hashOfConfig":"11"},{"size":1252,"mtime":1672033357763,"results":"16","hashOfConfig":"11"},{"size":3033,"mtime":1672033357762,"results":"17","hashOfConfig":"11"},{"size":8129,"mtime":1672033357763,"results":"18","hashOfConfig":"11"},{"size":618,"mtime":1672033357762,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"17p88xd",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/zhassik/Desktop/unistory/src/index.tsx",[],[],[],"/Users/zhassik/Desktop/unistory/src/App.tsx",[],[],"/Users/zhassik/Desktop/unistory/src/pages/UserPage.tsx",[],[],"/Users/zhassik/Desktop/unistory/src/pages/HomePage.tsx",[],[],"/Users/zhassik/Desktop/unistory/src/components/Header.tsx",["50"],[],"import React from \"react\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\n\nfunction Header(props: any, user: boolean) {\n\treturn (\n\t\t<Wrapper>\n\t\t\t{/* Logo zone */}\n\t\t\t{/* If you press logo window will be reloaded */}\n\t\t\t<a href=\"\">\n\t\t\t\t<Logo>\n\t\t\t\t\t<h5>Logo</h5>\n\t\t\t\t</Logo>\n\t\t\t</a>\n\n\t\t\t{/* ID zone */}\n\t\t\t{ props.account ?\n\t\t\t\t<Id>{ props.account }</Id>\n\t\t\t\t\t:\n\t\t\t\t<Button text={ \"Connect Metamask\" } action={ props.connect } />\n\t\t\t}\n\t\t</Wrapper>\n\t);\n}\n\nconst Wrapper = styled.header`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\theight: 4.5rem;\n\n\th5 {\n\t\tfont-weight: 400;\n\t}\n\n\t.btn {\n\t\twidth: 10.0625rem;\n\t\theight: 2.4375rem;\n\t\tmargin: 0.1875rem 0 0;\n\t}\n`\n\nconst Logo = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 12.4375rem;\n\theight: 2.75rem;\n\tborder: 1px dashed var(--clr-primary-6);\n\tbackground-color: var(--clr-primary-5);\n\tcursor: pointer;\n`\n\nconst Id = styled.h5`\n\twidth: 9.0625rem;\n\tcolor: var(--clr-primary-1);\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis\n`\n\nexport default Header;","/Users/zhassik/Desktop/unistory/src/components/Modal.tsx",[],[],"/Users/zhassik/Desktop/unistory/src/components/Hero.tsx",[],[],"/Users/zhassik/Desktop/unistory/src/components/Registration.tsx",["51","52","53","54"],[],"import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\nimport close from \"../assets/close.svg\";\n\n// to get list of users from local-storage\nconst getLocalItems = () => {\n\tlet list = localStorage.getItem('lists');\n\n\tif (list) {\n\t\treturn JSON.parse(localStorage.getItem('lists') || '{}');\n\t} else {\n\t\treturn [];\n\t}\n}\n\nfunction Registration(props: any) {\n\t// data from our form (input tags)\n\tconst [name, setName] = useState<string>('');\n\tconst [email, setEmail] = useState<string>('');\n\t// set of datas in one array\n\tconst [data, setData] = useState<any>({id: 0, username: '', email: '', address: ''});\n\tconst [items, setItems] = useState<any>(getLocalItems());\n\tconst [user, setUser] = useState<any>(props.user);\n\t// Error message\n\tconst [error, setError] = useState({})\n\n\t// get data from backend if we don't have it\n\tuseEffect(() => {\n\t\tfetch('https://new-backend.unistory.app/api/data')\n\t\t\t.then(response => response.json())\n\t\t\t.then(res => (items[0].id === undefined) ? setItems(res.items) : null)\n\t\t\t.catch(err => setError(err))\n  \t}, []);\t\n\n\t// this function checks if our list of users already have current user\n\tfunction exists(data: any): any {\n\t\tlet exist = false;\n\n\t\t{ items.map((item: any) => {\n\t\t\tif (item.username === data.username && item.email === data.email && item.address === data.address) \n\t\t\t\texist = true;\n\t\t}) }\n\t\treturn exist;\n\t}\n\n\t// this function submits information (name and email)\n\tfunction submitItem(e: any)  {\n\t\te.preventDefault();\n\t\tif (name !== '' && email !== '') {\n\t\t\tconst newData: any = {id: items.length + 1, username: name, email: email, address: props.account};\n\t\t\tconsole.log(data);\n\t\t\tconsole.log(newData);\n\t\t\t\n\t\t\tsetData(newData);\n\t\t}\n\t}\n\t\n\t// this function adds saved data about current user to list (table)\n\tfunction addItem(e: any)  {\n\t\te.preventDefault();\n\t\tif (!exists(data)) {\n\t\t\tconst newArray = [...items, data];\n\t\t\tsetItems(newArray);\n\t\t}\n\t}\n\t\n\t// this function removes current user from list (table)\n\tfunction deleteItem(e: any) {\n\t\te.preventDefault();\n\t\tconst updatesItems = items.filter((item: any) => {\n\t\t\treturn (item.username !== data.username || item.email !== data.email || item.address !== data.address);\n\t\t});\n\t\tsetItems(updatesItems);\n\t}\n\n\t// User that will be displayed on User Page\n\tfunction saveUser(e: any) {\n\t\te.preventDefault();\n\t\tdocument.location.href=\"/user\";\n\t\tsetUser(items[e.target.id - 1]);\n\t}\n\n\tuseEffect(() =>{\n\t\tlocalStorage.setItem('user', JSON.stringify(user))\n\t\tlocalStorage.setItem('lists', JSON.stringify(items))\n\t}, [user, items])\n\n\treturn (\n\t\t<div className=\"content\">\n\t\t\t{/* Form zone */}\n\t\t\t<FormBox>\n\t\t\t\t<h1 className=\"title\">Beta test registration</h1>\n\n\t\t\t\t<p className=\"text\">\n\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n\t\t\t\t\teiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n\t\t\t\t\tminim veniam, quis nostrud exercitation ullamco laboris nisi ut\n\t\t\t\t\taliquip ex ea commodo consequat.\n\t\t\t\t</p>\n\n\t\t\t\t<FormTitle>Name</FormTitle>\n\t\t\t\t{ (data.username !== '') ?\n\t\t\t\t\t<AccountInfo>{ data.username }</AccountInfo>\n\t\t\t\t\t\t:\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tclassName={ props.account ? \"input\" : \"input disabled\" }\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tplaceholder=\"We will display your name in participation list \"\n\t\t\t\t\t\tvalue={ name }\n\t\t\t\t\t\tonChange={ (e) => setName(e.target.value) }\n\t\t\t\t\t\tdisabled={ props.account ? false : true }\n\t\t\t\t\t/>\n\t\t\t\t}\n\n\t\t\t\t<FormTitle>Email</FormTitle>\n\t\t\t\t{ (data.email !== '') ?\n\t\t\t\t\t<AccountInfo>{ data.email }</AccountInfo>\n\t\t\t\t\t\t:\t\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tclassName={ props.account ? \"input\" : \"input disabled\" }\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tplaceholder=\"We will display your email in participation list \"\n\t\t\t\t\t\tvalue={ email }\n\t\t\t\t\t\tonChange={ (e) => setEmail(e.target.value) }\n\t\t\t\t\t\tdisabled={ props.account ? false : true }\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t{ props.account ?\n\t\t\t\t\t(data.username !== '' && data.email !== '') ?\n\t\t\t\t\t\t(!exists(data)) ?\n\t\t\t\t\t\t\t// If user filled in form but didn't add information into the table\n\t\t\t\t\t\t\t<Button text={ \"List me to the table\" } action={ addItem } />\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t// If user already registered disable button\n\t\t\t\t\t\t\t<Button text={ \"List me to the table\" } disabled={ true } />\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t// If user connected metamask\n\t\t\t\t\t\t<Button text={ \"Get early access\" } action={ submitItem } />\n\t\t\t\t\t\t:\n\t\t\t\t\t// If user didn't connected metamask account\n\t\t\t\t\t<Button text={ \"Connect Metamask\" } action={ props.connect } />\n\t\t\t\t}\n\n\t\t\t\t{ !props.account ? <h6>You need to connect wallet before registration</h6> : null }\n\t\t\t</FormBox>\n\t\t\t\n\t\t\t{/* Table zone */}\n\t\t\t{ data.username !== '' ?\n\t\t\t\t<TableBox>\n\t\t\t\t\t<h1 className=\"title\">Participation listing (enable only for participants)</h1>\n\n\t\t\t\t\t{/* Table header */}\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t<h4 className=\"title text1\">Name</h4>\n\t\t\t\t\t\t<h4 className=\"title text2\">Email</h4>\n\t\t\t\t\t\t<h4 className=\"title text3\">Wallet</h4>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Table */}\n\t\t\t\t\t<ul className={ exists(data) ? \"table acc\" : \"table \" }>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{ items?.slice(0).reverse().map((item: any) => (\n\t\t\t\t\t\t\t(item.username === data.username && item.email === data.email && item.address === data.address) ?\n\t\t\t\t\t\t\t\t<li className=\"row current\">\n\t\t\t\t\t\t\t\t\t{/* Current account */}\n\t\t\t\t\t\t\t\t\t<p className=\"text text1\">{ item.username }</p>\n\t\t\t\t\t\t\t\t\t<p className=\"text text2\">{ item.email }</p>\n\t\t\t\t\t\t\t\t\t<p className=\"text text3\">{ item.address }</p>\n\t\t\t\t\t\t\t\t\t<img src={close} alt=\"close button\" className=\"close btn\" onClick={ deleteItem } />\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<a href=\"/user\" id={ item.id } onClick={ saveUser }>\n\t\t\t\t\t\t\t\t\t<li className=\"row\" id={ item.id }>\n\t\t\t\t\t\t\t\t\t\t{/* Other accounts */}\n\t\t\t\t\t\t\t\t\t\t<p className=\"text text1\" id={ item.id }>{ item.username }</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text text2\" id={ item.id }>{ item.email }</p>\n\t\t\t\t\t\t\t\t\t\t<p className=\"text text3\" id={ item.id }>{ item.address }</p>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</ul>\n\t\t\t\t</TableBox>\n\t\t\t\t\t:\n\t\t\t\tnull\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nconst FormBox = styled.section`\n\twidth: 26.3125rem;\n\theight: 43.0625rem;\n\tmargin-top: 2.1875rem;\n\n\t.title {\n\t\tcolor: var(--clr-primary-1);\n\t}\n\n\t.text {\n\t\twidth: 25.3125rem;\n\t\tmargin: 1.125rem 0;\n\t}\n\n\t.input {\n\t\twidth: 26.3125rem;\n\t\theight: 2.625rem;\n\t\tbackground-color: transparent;\n\t\tborder: 1px solid var(--clr-white);\n\t\tborder-radius: 1.875rem;\n\t\tpadding-left: 1.125rem;\n\t}\n\t\n\t.input:focus {\n\t\toutline: none;\n\t\tborder: 1px solid var(--clr-primary-1);\n  \t}\n\n\t.btn {\n\t\twidth: 10.0625rem;\n\t\tmargin: 1.75rem 0 0.75rem;\n\t}\n\n\t.disabled {\n\t\topacity: 0.5;\n\t}\n\t\n\t.btn.disabled,\n\t.btn.disabled:hover {\n\t\tbackground-color: var(--clr-primary-1);\n\t}\n`\n\nconst FormTitle = styled.h4`\n\tpadding: 1.125rem 0 0.5rem;\n`\n\nconst AccountInfo = styled.h2`\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis\n`\n\nconst TableBox = styled.section`\n\twidth: 47.1875rem;\n\tmargin-top: 2.1875rem;\n\t\n\t.header {\n\t\tmargin-top: 1.1875rem;\n\t}\n\n\t.table {\n\t\theight: 34.375rem;\n\t\twidth: 40.25rem;\n\t\toverflow: scroll;\n\t\t\n\t\t::-webkit-scrollbar {\n\t\t\twidth: 0.1875rem;\n\t\t}\n\t\t\n\t\t/* Track */\n\t\t::-webkit-scrollbar-track {\n\t\t\tbackground: var(--clr-white);\n\t\t\topacity: 0.5;\n\t\t\tbackground-color: transparent;\n\t\t}\n\t\t\n\t\t/* Handle */\n\t\t::-webkit-scrollbar-thumb {\n\t\t\tbackground: var(--clr-primary-1);\n\t\t\tborder-radius: 0.125rem;\n\t\t}\n\n\t\t::-webkit-scrollbar-corner {\n\t\t\tbackground-color: transparent;\n\t\t }\n\t}\n\n\t.acc {\n\t\twidth: 43.625rem;\n\t}\n\n\t.header,\n\t.row {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\tpadding: 1rem 0;\n\t}\n\n\t.row::before {\n\t\tposition: absolute;\n\t\tcontent: \"\";\n\t\twidth: 100%;\n\t\theight: 0.0625rem;\n\t\tbackground-color: var(--clr-white);\n\t\ttop: 0;\n\t}\n\t\n\t.acc .row::before {\n\t\twidth: calc(100% - 1.875rem);\n\t}\n\n\t.text {\n\t\tline-height: 1.125rem;\n\t\tfont-size: 14px;\n\t\twhite-space: nowrap;\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis\n\t}\t\n\n\t.row.current .text {\n\t\tcolor: var(--clr-primary-1);\n\t}\n\n\t.text1 {\n\t\twidth: 11.6875rem;\n\t}\n\n\t.text2 {\n\t\twidth: 16.0625rem;\n\t}\n\n\t.text3 {\n\t\twidth: 12.1875rem;\n\t}\n\n\t.close {\n\t\tmargin: 0 1.875rem 0 auto;\n\t\tcursor: pointer;\n\t}\n`\n\nexport default Registration;","/Users/zhassik/Desktop/unistory/src/components/Button.tsx",[],[],{"ruleId":"55","severity":1,"message":"56","line":10,"column":4,"nodeType":"57","endLine":10,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":26,"column":9,"nodeType":"60","messageId":"61","endLine":26,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":34,"column":7,"nodeType":"64","endLine":34,"endColumn":9,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":40,"column":3,"nodeType":"68","messageId":"69","endLine":43,"endColumn":7},{"ruleId":"70","severity":1,"message":"71","line":40,"column":27,"nodeType":"72","messageId":"73","endLine":40,"endColumn":29},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'items'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"75","fix":"76"},"Update the dependencies array to be: [items]",{"range":"77","text":"78"},[1107,1109],"[items]"]